name: ci

on:  
  push:
    branches: ["actions"]
  pull_request:
    branches: ["main"]


jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract commit hash
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build -t vinnare:$COMMIT_HASH . -f ./Api/Dockerfile

      - name: Run tests (placeholder)
        run: |
          echo "Running tests..."
          # TODO: Replace with actual test command
          # docker run --rm vinnare:$COMMIT_HASH dotnet test

  tag-and-push:
    needs: build-and-test
    
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        if: success()  # Only runs if previous steps pass
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        env:
            AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Tag and push Docker image to AWS ECR
        run: |
          docker tag vinnare:$COMMIT_HASH ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$COMMIT_HASH
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$COMMIT_HASH

      - name: Notify deployment pipeline
        run: echo "IMAGE_TAG=$COMMIT_HASH" >> $GITHUB_ENV
  
  deploy:
    needs: tag-and-push
    uses: ./.github/workflows/cd.yml    
    secrets:
      ec2_host: ${{ secrets.EC2_HOST }}
      ec2_user: ${{ secrets.EC2_USER }}
      ec2_ssh_key: ${{ secrets.EC2_SSH_KEY }}
